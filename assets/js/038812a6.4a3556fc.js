"use strict";(self.webpackChunklibro_disenio_oop=self.webpackChunklibro_disenio_oop||[]).push([[2462],{3905:function(e,n,a){a.d(n,{Zo:function(){return m},kt:function(){return u}});var t=a(7294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=t.createContext({}),d=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},m=function(e){var n=d(e.components);return t.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=d(a),u=o,k=p["".concat(s,".").concat(u)]||p[u]||c[u]||r;return a?t.createElement(k,i(i({ref:n},m),{},{components:a})):t.createElement(k,i({ref:n},m))}));function u(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var d=2;d<r;d++)i[d]=a[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},803:function(e,n,a){a.d(n,{_:function(){return o}});var t=a(7294),o=function(e){var n=e.id,a=e.titulo,o=e.descripcion;return t.createElement("div",{className:"card"},t.createElement("div",{className:"card__image"},t.createElement("iframe",{src:"https://www.youtube.com/embed/"+n,className:"post-content-video",frameBorder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),a&&t.createElement("div",{className:"card__body"},t.createElement("h3",null,a),t.createElement("p",null,o)))}},5677:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return s},contentTitle:function(){return d},metadata:function(){return m},toc:function(){return c},default:function(){return u}});var t=a(2122),o=a(9756),r=(a(7294),a(3905)),i=a(803),l=["components"],s={sidebar_position:2,title:"De Wollok a Kotlin",description:"Peque\xf1o apunte-machete con las diferencias y similitudes entre ambos lenguajes, pensado para acompa\xf1ar la transici\xf3n."},d=void 0,m={unversionedId:"kotlin/herramientas-lenguaje/wollok-a-kotlin",id:"kotlin/herramientas-lenguaje/wollok-a-kotlin",isDocsHomePage:!1,title:"De Wollok a Kotlin",description:"Peque\xf1o apunte-machete con las diferencias y similitudes entre ambos lenguajes, pensado para acompa\xf1ar la transici\xf3n.",source:"@site/docs/kotlin/herramientas-lenguaje/wollok-a-kotlin.mdx",sourceDirName:"kotlin/herramientas-lenguaje",slug:"/kotlin/herramientas-lenguaje/wollok-a-kotlin",permalink:"/libro-disenio-oop/docs/kotlin/herramientas-lenguaje/wollok-a-kotlin",editUrl:"https://github.com/surprograma/libro-disenio-oop/edit/main/docs/kotlin/herramientas-lenguaje/wollok-a-kotlin.mdx",version:"current",lastUpdatedBy:"Federico Aloi",lastUpdatedAt:1631125364,formattedLastUpdatedAt:"9/8/2021",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"De Wollok a Kotlin",description:"Peque\xf1o apunte-machete con las diferencias y similitudes entre ambos lenguajes, pensado para acompa\xf1ar la transici\xf3n."},sidebar:"tutorialSidebar",previous:{title:"Refactorizaci\xf3n",permalink:"/libro-disenio-oop/docs/tecnicas-disenio/refactorizacion"},next:{title:"Matchers de Kotest",permalink:"/libro-disenio-oop/docs/kotlin/herramientas-lenguaje/matchers-kotest"}},c=[{value:"Migraci\xf3n en vivo",id:"migraci\xf3n-en-vivo",children:[]},{value:"Definici\xf3n de clases",id:"definici\xf3n-de-clases",children:[{value:"Instanciaci\xf3n de objetos",id:"instanciaci\xf3n-de-objetos",children:[]}]},{value:"Objetos autodefinidos",id:"objetos-autodefinidos",children:[]},{value:"Interfaces",id:"interfaces",children:[]},{value:"Colecciones",id:"colecciones",children:[{value:"Dos sabores: mutables o inmutables",id:"dos-sabores-mutables-o-inmutables",children:[]},{value:"Closures o lambdas",id:"closures-o-lambdas",children:[]},{value:"Operaciones comunes sobre colecciones",id:"operaciones-comunes-sobre-colecciones",children:[]}]},{value:"Manejo de errores",id:"manejo-de-errores",children:[]}],p={toc:c};function u(e){var n=e.components,a=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Como se menciona en el titulo, esta gu\xeda busca dar un primer acercamiento hacia el lenguaje Kotlin, compar\xe1ndolo con ",(0,r.kt)("a",{parentName:"p",href:"https://www.wollok.org/"},"Wollok"),"."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Seg\xfan sus creadores, Wollok es un ",(0,r.kt)("em",{parentName:"p"},"lenguaje de programaci\xf3n y entorno de desarrollo integrado (IDE) para ser utilizado en el dictado de materias iniciales de programaci\xf3n a objetos"),". El proyecto es dirigido por docentes universitarios de Argentina, nucleados en la ",(0,r.kt)("a",{parentName:"p",href:"https://www.uqbar.org/#/"},"Fundaci\xf3n Uqbar"),"."))),(0,r.kt)("h2",{id:"migraci\xf3n-en-vivo"},"Migraci\xf3n en vivo"),(0,r.kt)("p",null,"A modo introductorio, un video donde migramos parte de un ejercicio hecho en Wollok a Kotlin, utilizando los entornos de desarrollo de cada herramienta."),(0,r.kt)(i._,{id:"XsA-zNikAQU",titulo:"Migrando Vendedores de Wollok a Kotlin",descripcion:"Grabaci\xf3n del proceso de migraci\xf3n de un ejercicio hecho en Wollok a Kotlin.",mdxType:"VideoYouTube"}),(0,r.kt)("h2",{id:"definici\xf3n-de-clases"},"Definici\xf3n de clases"),(0,r.kt)("p",null,"La primera gran diferencia es que Kotlin es un lenguaje con ",(0,r.kt)("em",{parentName:"p"},"tipado est\xe1tico")," mientras que Wollok ten\xeda ",(0,r.kt)("em",{parentName:"p"},"tipado din\xe1mico"),". Esto implica que la responsabilidad de escribir los tipos pasa a ser de quien programa."),(0,r.kt)("p",null,"Afortunadamente Kotlin ",(0,r.kt)("em",{parentName:"p"},"infiere")," la mayor\xeda de los tipos, siendo necesario escribirlos en pocos casos:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"par\xe1metros"),", tanto de los m\xe9todos como del constructor de una clase;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"atributos")," cuyo valor no se inicialize al definirlo.")),(0,r.kt)("p",null,"Veamos un ejemplo de definiciones equivalentes en ",(0,r.kt)("inlineCode",{parentName:"p"},"Wollok")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"Kotlin"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wollok"},"/* Wollok */\nclass Ave {\n  var property energia\n  const property direccion\n\n  const amiguis = []\n\n  method esPopular() = amiguis.size() >= 5\n\n  method conoceA(otroAve) = amiguis.contains(otroAve)\n\n  method volar() {\n    energia -= 1\n  }\n\n  method visitarA(otroAve) {\n    if (self.conoceA(otroAve)) {\n      self.volar()\n    }\n  }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"/* Kotlin */\nclass Ave(var energia: Int, val direccion: String) {\n  val amiguis = mutableListOf<Ave>()\n\n  fun esPopular() = amiguis.size >= 5\n\n  fun conoceA(otroAve: Ave) = amiguis.contains(otroAve)\n\n  fun volar() {\n    energia -= 1\n  }\n\n  fun visitarA(otroAve: Ave) {\n    if (this.conoceA(otroAve)) {\n      this.volar()\n    }\n  }\n}\n")),(0,r.kt)("p",null,"Algunas diferencias:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"lo que en Wollok era ",(0,r.kt)("inlineCode",{parentName:"li"},"const"),", en Kotlin es ",(0,r.kt)("inlineCode",{parentName:"li"},"val"),". En ambos ",(0,r.kt)("inlineCode",{parentName:"li"},"var")," significa lo mismo,"),(0,r.kt)("li",{parentName:"ul"},"el ",(0,r.kt)("inlineCode",{parentName:"li"},"method")," de Wollok es ",(0,r.kt)("inlineCode",{parentName:"li"},"fun")," en Kotlin, y el ",(0,r.kt)("inlineCode",{parentName:"li"},"self")," es ",(0,r.kt)("inlineCode",{parentName:"li"},"this"),","),(0,r.kt)("li",{parentName:"ul"},"en Kotlin, los atributos se escriben como si fueran par\xe1metros de la clase.")),(0,r.kt)("h3",{id:"instanciaci\xf3n-de-objetos"},"Instanciaci\xf3n de objetos"),(0,r.kt)("p",null,"Continuando con el ejemplo anterior, as\xed se crean objetos en uno y otro lenguaje:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wollok"},'/* Wollok */\nconst pepita = new Ave(energia = 5, direccion = "Wallaby 42, Sidney")\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'/* Kotlin */\nval pepita = Ave(energia = 5, direccion = "Wallaby 42, Sidney")\n\n// Tambi\xe9n vale no poner los nombres de los atributos,\n// en ese caso lo que importa es el orden.\nval pepita = Ave(5, "Wallaby 42, Sidney")\n')),(0,r.kt)("p",null,"Algunas diferencias:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"en Kotlin, no se escribe el ",(0,r.kt)("inlineCode",{parentName:"li"},"new"),";"),(0,r.kt)("li",{parentName:"ul"},"en Kotlin, no es necesario poner los nombres de los atributos.")),(0,r.kt)("h2",{id:"objetos-autodefinidos"},"Objetos autodefinidos"),(0,r.kt)("p",null,"Para objetos \xfanicos que tienen que ser conocidos por toda la aplicaci\xf3n, podemos crear ",(0,r.kt)("em",{parentName:"p"},"objetos autodefinidos"),". Es decir, objetos que simplemente existen y no hace falta instanciarlos. En nuestro ejemplo, podemos usarlos para definir los tipos de alimentos."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"object Alpiste {\n  var estaSeco = true\n  fun energiaQueOtorga() = if (estaSeco) { 4 } else { 2 }\n}\n\nobject Girasol {\n  fun energiaQueOtorga() = 4\n}\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Esto es casi igual que en Wollok, solo que ac\xe1 escribimos los nombres de los objetos con ",(0,r.kt)("inlineCode",{parentName:"p"},"MayusculaInicial"),"."))),(0,r.kt)("h2",{id:"interfaces"},"Interfaces"),(0,r.kt)("p",null,"Como Kotlin utiliza tipado est\xe1tico, si queremos tratar ",(0,r.kt)("em",{parentName:"p"},"polim\xf3rficamente")," los dos objetos de arriba, necesitamos que tengan un tipo en com\xfan."),(0,r.kt)("p",null,"Podr\xedamos crear una clase abstracta, pero en Kotlin tambi\xe9n podemos crear una interfaz, que describe un ",(0,r.kt)("em",{parentName:"p"},"contrato")," a cumplir:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"interface Alimento {\n  fun energia(): Int\n}\n\nobject Alpiste: Alimento {\n  var estaSeco = true\n  fun energiaQueOtorga() = if (estaSeco) { 4 } else { 2 }\n}\n\nobject Girasol: Alimento {\n  fun energiaQueOtorga() = 4\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"El ",(0,r.kt)("inlineCode",{parentName:"li"},":")," en este caso indica que nuestros objetos ",(0,r.kt)("em",{parentName:"li"},"implementan")," la interfaz ",(0,r.kt)("inlineCode",{parentName:"li"},"Alimento"),"."),(0,r.kt)("li",{parentName:"ul"},"El ",(0,r.kt)("inlineCode",{parentName:"li"},"override")," nos lo obliga a poner el IDE para aclarar que estamos hablando de una propiedad definida ",(0,r.kt)("em",{parentName:"li"},"m\xe1s arriba"),".")),(0,r.kt)("p",null,"Luego, en ",(0,r.kt)("inlineCode",{parentName:"p"},"Ave")," ya podemos definir:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"fun alimentar(alimento: Alimento) {\n  energia += alimento.energiaQueOtorga()\n}\n")),(0,r.kt)("p",null,"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"alimentar")," admite cualquier objeto que implemente la interfaz ",(0,r.kt)("inlineCode",{parentName:"p"},"Alimento"),"."),(0,r.kt)("h2",{id:"colecciones"},"Colecciones"),(0,r.kt)("h3",{id:"dos-sabores-mutables-o-inmutables"},"Dos sabores: mutables o inmutables"),(0,r.kt)("p",null,'En Kotlin, todas las colecciones vienen en dos "sabores": mutables e inmutables. Las primeras soportan modificar sus elementos (agregar, quitar, actualizar), mientras que las segundas solo permiten acceder a sus elementos. Queda a criterio de quien programa cu\xe1l utilizar en cada caso, prefiriendo desde este espacio las inmutables (porque algo que no se puede modificar es menos propenso a errores).'),(0,r.kt)("p",null,"Veamos entonces c\xf3mo crear unas y otras:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"/* Kotlin */\nlistOf(1, 2, 3)\nmutableListOf(1, 2, 3)\n\nsetOf(pepita, anastasia)\nmutableSetOf(pepita, anastasia)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Ojo \ud83d\udc40"),": no hay que mezclar las ideas de ",(0,r.kt)("inlineCode",{parentName:"p"},"val")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"var")," con la (in)mutabilidad de las colecciones. Por ejemplo, una colecci\xf3n inmutable podr\xeda estar referenciada con ",(0,r.kt)("inlineCode",{parentName:"p"},"var"),", mientras que una mutable podr\xeda ser ",(0,r.kt)("inlineCode",{parentName:"p"},"val"),"."),(0,r.kt)("h3",{id:"closures-o-lambdas"},"Closures o lambdas"),(0,r.kt)("p",null,"Hay una peque\xf1a diferencia en c\xf3mo se escriben los ",(0,r.kt)("em",{parentName:"p"},"closures")," que utilizamos para las operaciones de orden superior:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wollok"},"/* Wollok */\navesAmigas.any { aveAmiga => aveAmiga.esPopular() }\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"/* Kotlin */\navesAmigas.any { aveAmiga -> aveAmiga.esPopular() }\n")),(0,r.kt)("p",null,"\xbfTe diste cuenta? En vez de usar ",(0,r.kt)("inlineCode",{parentName:"p"},"=>")," en Kotlin se usa ",(0,r.kt)("inlineCode",{parentName:"p"},"->")," para definir una ",(0,r.kt)("em",{parentName:"p"},"lambda")," o ",(0,r.kt)("em",{parentName:"p"},"closure"),"."),(0,r.kt)("p",null,'Hay tambi\xe9n otra sintaxis m\xe1s "cheta" que tiene Kotlin, que nos ahorra de inventarle un nombre al par\xe1metro:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"avesAmigas.any { it.volarHastaLoDePepita() }\n")),(0,r.kt)("p",null,"Cualquiera de las dos formas es v\xe1lida."),(0,r.kt)("h3",{id:"operaciones-comunes-sobre-colecciones"},"Operaciones comunes sobre colecciones"),(0,r.kt)("p",null,"Un muy peque\xf1o resumen de las operaciones m\xe1s comunes. Una lista extens\xedsima de todos los m\xe9todos que existen se pueden ver en ",(0,r.kt)("a",{parentName:"p",href:"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-collection/"},"la documentaci\xf3n oficial de ",(0,r.kt)("inlineCode",{parentName:"a"},"Collection")),"."),(0,r.kt)("h4",{id:"b\xe1sicas"},"B\xe1sicas"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Sintaxis"),(0,r.kt)("th",{parentName:"tr",align:null},"Comportamiento"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"size")),(0,r.kt)("td",{parentName:"tr",align:null},"Devuelve el ",(0,r.kt)("strong",{parentName:"td"},"tama\xf1o")," de la colecci\xf3n. Ojo que es un atributo, por eso va sin parentesis.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isEmpty()")),(0,r.kt)("td",{parentName:"tr",align:null},"Indica si la colecci\xf3n ",(0,r.kt)("strong",{parentName:"td"},"est\xe1 vac\xeda"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"first()")),(0,r.kt)("td",{parentName:"tr",align:null},"Devuelve el ",(0,r.kt)("strong",{parentName:"td"},"primer elemento"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"last()")),(0,r.kt)("td",{parentName:"tr",align:null},"Devuelve el ",(0,r.kt)("strong",{parentName:"td"},"\xfaltimo elemento"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"contains(elemento)")),(0,r.kt)("td",{parentName:"tr",align:null},"Indica si la colecci\xf3n ",(0,r.kt)("strong",{parentName:"td"},"contiene")," a un cierto ",(0,r.kt)("inlineCode",{parentName:"td"},"elemento"),".")))),(0,r.kt)("h4",{id:"orden-superior"},"Orden superior"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Sintaxis"),(0,r.kt)("th",{parentName:"tr",align:null},"Comportamiento"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any { condici\xf3n }")),(0,r.kt)("td",{parentName:"tr",align:null},"Indica si ",(0,r.kt)("strong",{parentName:"td"},"alg\xfan elemento cumple")," la ",(0,r.kt)("inlineCode",{parentName:"td"},"condici\xf3n")," dada.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"all { condici\xf3n }")),(0,r.kt)("td",{parentName:"tr",align:null},"Indica si ",(0,r.kt)("strong",{parentName:"td"},"todos los elementos cumplen")," la ",(0,r.kt)("inlineCode",{parentName:"td"},"condici\xf3n")," dada.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"find { condici\xf3n }")),(0,r.kt)("td",{parentName:"tr",align:null},"Devuelve el ",(0,r.kt)("strong",{parentName:"td"},"primer elemento que cumpla")," con la condici\xf3n dada.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sumBy { transformaci\xf3n }")),(0,r.kt)("td",{parentName:"tr",align:null},"Devuelve la ",(0,r.kt)("strong",{parentName:"td"},"suma de los elementos"),", aplicando la ",(0,r.kt)("inlineCode",{parentName:"td"},"transformaci\xf3n")," sobre cada uno de ellos.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"minByOrNull { transformaci\xf3n }")),(0,r.kt)("td",{parentName:"tr",align:null},"Devuelve el ",(0,r.kt)("strong",{parentName:"td"},"menor elemento")," seg\xfan la ",(0,r.kt)("inlineCode",{parentName:"td"},"transformaci\xf3n")," dada, o ",(0,r.kt)("inlineCode",{parentName:"td"},"null")," si la colecci\xf3n est\xe1 vac\xeda.")))),(0,r.kt)("p",null,"Est\xe1n tambi\xe9n los cl\xe1sicos ",(0,r.kt)("inlineCode",{parentName:"p"},"map"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"filter"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"reduce")," y much\xedsimos m\xe9todos m\xe1s."),(0,r.kt)("h4",{id:"exclusivos-para-colecciones-mutables"},"Exclusivos para colecciones mutables"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Sintaxis"),(0,r.kt)("th",{parentName:"tr",align:null},"Comportamiento"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clear()")),(0,r.kt)("td",{parentName:"tr",align:null},"Borra todos los elementos.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"add(elemento)")),(0,r.kt)("td",{parentName:"tr",align:null},"Agrega el ",(0,r.kt)("inlineCode",{parentName:"td"},"elemento"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"remove(elemento)")),(0,r.kt)("td",{parentName:"tr",align:null},"Borra el ",(0,r.kt)("inlineCode",{parentName:"td"},"elemento"),".")))),(0,r.kt)("h4",{id:"transformaciones-entre-lista-y-conjunto"},"Transformaciones entre lista y conjunto"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Sintaxis"),(0,r.kt)("th",{parentName:"tr",align:null},"Comportamiento"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"lista.toSet()")),(0,r.kt)("td",{parentName:"tr",align:null},"Devuelve un conjunto con los elementos ",(0,r.kt)("em",{parentName:"td"},"\xfanicos")," de la lista. O dicho de otra manera: los elementos que ten\xeda la lista, omitiendo repetidos.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"conjunto.toList()")),(0,r.kt)("td",{parentName:"tr",align:null},"Devuelve una lista con los mismos elementos que tenga el conjunto.")))),(0,r.kt)("h2",{id:"manejo-de-errores"},"Manejo de errores"),(0,r.kt)("p",null,"Para lanzar un error que corte la ejecuci\xf3n, en Wollok podemos hacer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-wollok"},'method volar() {\n  if (energia < 0) {\n    self.error("No queda suficiente energ\xeda para volar")\n  }\n\n  energia -= 1\n}\n')),(0,r.kt)("p",null,"En Kotlin, en vez de ser un m\xe9todo, hay una funci\xf3n global llamada ",(0,r.kt)("inlineCode",{parentName:"p"},"error"),". El ejemplo se traduce a:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'fun volar() {\n  if (energia < 0) {\n    error("No queda suficiente energ\xeda para volar")\n  }\n\n  energia -= 1\n}\n')),(0,r.kt)("p",null,"Otra forma de lanzar errores es usando ",(0,r.kt)("inlineCode",{parentName:"p"},"check"),", que ",(0,r.kt)("em",{parentName:"p"},"chequea")," que una condici\xf3n se cumpla, y ",(0,r.kt)("strong",{parentName:"p"},"de lo contrario")," arroja un error con el mensaje especificado:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'fun volar() {\n  check (energia >= 0) {\n    "No queda suficiente energ\xeda para volar"\n  }\n\n  energia -= 1\n}\n')),(0,r.kt)("p",null,"Queda al gusto de ustedes decidir cu\xe1l de las dos variantes utilizar. \ud83d\ude03"))}u.isMDXComponent=!0}}]);